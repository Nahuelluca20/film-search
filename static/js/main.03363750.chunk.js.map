{"version":3,"sources":["Components/CardMovie.js","Components/SearchMovie.js","App.js","reportWebVitals.js","index.js"],"names":["Card","data","handleChange","handleSubmit","className","style","backgroundImage","imgBg","onSubmit","type","placeholder","onChange","required","height","src","imgPoster","title","overview","release","vote","popularity","useApi","useState","setData","useEffect","fechData","search","movie","a","process","axios","get","res","arrayData","results","movieData","original_title","release_date","vote_average","backdrop_path","poster_path","alert","setSearch","event","target","value","console","log","preventDefault","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAEe,SAASA,EAAT,GAAqD,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAC3C,OACA,0BAASC,UAAU,YAAYC,MAAO,CAACC,gBAAgB,OAAD,OAASL,EAAKM,MAAd,MAAtD,UACA,8BACI,uBAAMC,SAAUL,EAAhB,UACI,uBACIM,KAAK,OACLC,YAAY,wBACZC,SAAUT,EACVU,UAAQ,IAEZ,iDAGJ,sBAAKR,UAAU,WAAf,UACI,qBAAKS,OAAO,QAAQC,IAAKb,EAAKc,YAC9B,qBAAKX,UAAU,WAAf,SACI,gCACI,6BAAKH,EAAKe,QACV,4BAAIf,EAAKgB,WACT,oDACsB,+BAAOhB,EAAKiB,aAElC,wCACU,iCAAOjB,EAAKkB,KAAZ,YAEV,8CACgB,+BAAOlB,EAAKmB,2BCxBrC,SAASC,IAAU,IAAD,EACLC,mBAAS,CAC7BN,MAAO,GACPC,SAAU,GACVC,QAAS,GACTC,KAAM,GACNC,WAAY,GACZb,MAAO,GACPQ,UAAW,KARc,mBACtBd,EADsB,KAChBsB,EADgB,KAW7BC,qBAAU,WACNC,EAASC,KACV,IAEH,IAAMD,EAAQ,uCAAG,WAAME,GAAN,mBAAAC,EAAA,sEAEUC,mCAFV,SAGaC,IAAMC,IAAN,4DADHF,mCACG,kBAA+EF,IAH5F,cAGCK,EAHD,OAICC,EAAYD,EAAI/B,KAAKiC,QAAQ,GAC7BC,EAAY,CACdnB,MAAOiB,EAAUG,eACjBnB,SAAUgB,EAAUhB,SACpBC,QAASe,EAAUI,aACnBlB,KAAMc,EAAUK,aAChBlB,WAAYa,EAAUb,WACtBb,MAAO,sCAAwC0B,EAAUM,cACzDxB,UAAW,sCAAwCkB,EAAUO,aAZ5D,SAcHjB,EAAQY,GAdL,yDAgBLM,MAAM,mBAhBD,0DAAH,sDAfe,EAoCDnB,mBAAS,QApCR,mBAoCtBI,EApCsB,KAoCdgB,EApCc,KA8C7B,OACI,cAAC1C,EAAD,CACIC,KAAMA,EACNC,aANa,SAAAyC,GACjBD,EAAUC,EAAMC,OAAOC,QAMnB1C,aAZa,SAACwC,GAClBlB,EAASC,GACToB,QAAQC,IAAIrB,GACZiB,EAAMK,oBCjCCC,MAVf,WAEE,OACE,+BACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.03363750.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Card({ data, handleChange, handleSubmit }) {\r\n        return (\r\n        <section className=\"principal\" style={{backgroundImage: `url(${data.imgBg})`}}>\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search Movie Title...\"\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n                <button >Search</button>\r\n            </form>\r\n        </div>\r\n            <div className=\"children\">\r\n                <img height=\"500px\" src={data.imgPoster}/>\r\n                <div className=\"info-div\">\r\n                    <div>\r\n                        <h1>{data.title}</h1>\r\n                        <p>{data.overview}</p>\r\n                        <h3>\r\n                            Original release: <span>{data.release}</span>\r\n                        </h3>\r\n                        <h3>\r\n                            Vote: <span>{data.vote}/10</span>\r\n                        </h3>\r\n                        <h3>\r\n                            Popularity: <span>{data.popularity}</span>\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport CardMovie from './CardMovie'\r\n\r\n\r\nexport default function useApi() {\r\n    const [data, setData] = useState({\r\n        title: '',\r\n        overview: '',\r\n        release: '',\r\n        vote: '',\r\n        popularity: '',\r\n        imgBg: '',\r\n        imgPoster: '',\r\n    })\r\n    \r\n    useEffect(() => {\r\n        fechData(search)\r\n    }, [])\r\n    \r\n    const fechData = async(movie) => {\r\n            try {\r\n                const apiKey = process.env.REACT_APP_URL\r\n                const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${movie}`)\r\n                const arrayData = res.data.results[0]\r\n                const movieData = {\r\n                    title: arrayData.original_title,\r\n                    overview: arrayData.overview,\r\n                    release: arrayData.release_date,\r\n                    vote: arrayData.vote_average,\r\n                    popularity: arrayData.popularity,\r\n                    imgBg: 'https://image.tmdb.org/t/p/original' + arrayData.backdrop_path,\r\n                    imgPoster: 'https://image.tmdb.org/t/p/original' + arrayData.poster_path,\r\n                }\r\n            await setData(movieData)     \r\n            } catch (error) {\r\n                alert('Title not found')\r\n            }     \r\n\r\n        //console.log(res.data.results[0])\r\n    }\r\n    const [search, setSearch] = useState('dirt')\r\n    \r\n    const handleSubmit = (event) => {\r\n        fechData(search)\r\n        console.log(search)\r\n        event.preventDefault()\r\n    };\r\n    const handleChange = event => {\r\n        setSearch(event.target.value)\r\n    };\r\n    return (\r\n        <CardMovie \r\n            data={data} \r\n            handleChange={handleChange} \r\n            handleSubmit={handleSubmit}\r\n        />\r\n    )\r\n}\r\n","import './App.css';\nimport SearchMovie from './Components/SearchMovie'\n\nfunction App() {\n\n  return (\n    <main>\n      <SearchMovie />\n    </main>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}